/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IndexManagerPanel.java
 *
 * Created on 2010-1-18, 15:54:13
 */
package org.jhrcore.client.index;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.SwingBindings;
import org.jhrcore.client.CommUtil;
import org.jhrcore.comm.ConfigManager;
import org.jhrcore.entity.SysNoticeType;
import org.jhrcore.entity.salary.ValidateSQLResult;
import org.jhrcore.msg.CommMsg;
import org.jhrcore.ui.BeanPanel;
import org.jhrcore.ui.ModelFrame;
import org.jhrcore.ui.ValidateEntity;
import org.jhrcore.ui.action.CloseAction;
import org.jhrcore.util.ComponentUtil;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class IndexManPanel extends javax.swing.JPanel {

    private JListBinding all_binding;
    private JListBinding select_binding;
    private List select_list = new ArrayList();
    private List unselect_list = new ArrayList();
    private JMenuItem miEdit = new JMenuItem("改模板名");
    private JPopupMenu pp = new JPopupMenu();

    /** Creates new form IndexManagerPanel */
    public IndexManPanel() {
        initComponents();
        initOthers();
        setupEvents();
    }

    public IndexManPanel(List types) {
        initComponents();
        unselect_list.addAll(types);
        initOthers();
        setupEvents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlsUnSelect = new javax.swing.JList();
        btnSelect = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlsSelect = new javax.swing.JList();
        btnDown = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jlsUnSelect.setBorder(javax.swing.BorderFactory.createTitledBorder("所有模板："));
        jScrollPane1.setViewportView(jlsUnSelect);

        btnSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/select_one.png"))); // NOI18N

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/remove_one.png"))); // NOI18N

        jlsSelect.setBorder(javax.swing.BorderFactory.createTitledBorder("显示模板："));
        jScrollPane2.setViewportView(jlsSelect);

        btnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/move_down.png"))); // NOI18N

        btnUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/move_up.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnOk.setText("确定");

        btnCancel.setText("取消");

        jLabel1.setText("（说明：列表右键可删改模板）");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList jlsSelect;
    private javax.swing.JList jlsUnSelect;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        ComponentUtil.setIcon(miEdit, "blank");
        pp.add(miEdit);
        all_binding = SwingBindings.createJListBinding(UpdateStrategy.READ_WRITE, unselect_list, jlsUnSelect);
        all_binding.bind();
        select_binding = SwingBindings.createJListBinding(UpdateStrategy.READ_WRITE, select_list, jlsSelect);
        select_binding.bind();
    }

    private void setupEvents() {
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                saveConfig();
                ModelFrame.close();
            }
        });
        CloseAction.doCloseAction(btnCancel);
        jlsSelect.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getButton() == MouseEvent.BUTTON3) {
                    pp.show(jlsSelect, e.getX(), e.getY());
                }
            }
        });
        jlsUnSelect.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getButton() == MouseEvent.BUTTON3) {
                    pp.show(jlsUnSelect, e.getX(), e.getY());
                }
            }
        });
        miEdit.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object obj = ((JList) pp.getInvoker()).getSelectedValue();
                editType(obj);
            }
        });
        btnSelect.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object[] objs = jlsUnSelect.getSelectedValues();
                for (Object obj : objs) {
                    select_list.add(obj);
                    unselect_list.remove(obj);
                }
                reBind();
            }
        });
        btnRemove.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object[] objs = jlsSelect.getSelectedValues();
                for (Object obj : objs) {
                    unselect_list.add(obj);
                    select_list.remove(obj);
                }
                reBind();
            }
        });
        btnUp.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                moveUp(-1);
            }
        });
        btnDown.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                moveUp(1);
            }
        });
        String show = ConfigManager.getConfigManager().getProperty("UI.indexOrder");
        if (show != null && !show.trim().equals("")) {
            String[] show_code = show.split("\\;");
            for (int i = 0; i < show_code.length; i++) {
                String name = show_code[i];
                for (Object obj : unselect_list) {
                    SysNoticeType snt = (SysNoticeType) obj;
                    if (snt.getCode().equals(name)) {
                        select_list.add(snt); //选择的模块
                        break;
                    }
                }
            }
        } else {
            for (Object obj : unselect_list) {
                select_list.add(obj);
            }
        }
        unselect_list.removeAll(select_list);
        reBind();
    }

    private void moveUp(int step) {
        int count = select_list.size();
        if (count <= 1) {
            return;
        }
        int ind = jlsSelect.getSelectedIndex();
        Object obj = jlsSelect.getSelectedValue();
        ind = ind + step;
        ind = ind < 0 ? (count - 1) : ind;
        ind = ind == count ? 0 : ind;
        select_list.remove(obj);
        if (ind == (count - 1)) {
            select_list.add(obj);
        } else {
            select_list.add(ind, obj);
        }
        reBind();
        jlsSelect.setSelectedValue(obj, true);
    }

    private void reBind() {
        all_binding.unbind();
        all_binding.bind();
        select_binding.unbind();
        select_binding.bind();
        jlsUnSelect.updateUI();
        jlsSelect.updateUI();
    }

    private void saveConfig() {
        String config = "";
        for (Object obj : select_list) {
            config = config + ((SysNoticeType) obj).getCode() + ";";
        }
        ConfigManager.getConfigManager().setProperty("UI.indexOrder", config);
        ConfigManager.getConfigManager().save2();
    }

    private void editType(Object obj) {
        if (obj == null) {
            return;
        }
        ValidateEntity ve = new ValidateEntity() {

            @Override
            public boolean isEntityValidate(Object obj) {
                SysNoticeType snt = (SysNoticeType) obj;
                if (snt.getContent() == null || snt.getContent().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "模板名称不可为空");
                    return false;
                }
                if (CommUtil.exists("select 1 from SysNoticeType where content='" + snt.getContent() + "' and sysNoticeType_key<>'" + snt.getSysNoticeType_key() + "'")) {
                    JOptionPane.showMessageDialog(null, "该模板名称已经存在");
                    return false;
                }
                return true;
            }
        };
        List<String> fields = new ArrayList<String>();
        fields.add("code");
        fields.add("content");
        fields.add("sys_type");
        if (BeanPanel.edit(obj, fields, "编辑模板", ve)) {
            ValidateSQLResult result = CommUtil.updateEntity(obj);
            if (result.getResult() == 0) {
                MsgUtil.showInfoMsg(CommMsg.SAVESUCCESS_MESSAGE);
                reBind();
            } else {
                MsgUtil.showHRSaveErrorMsg(result);
            }
        }
    }
}
