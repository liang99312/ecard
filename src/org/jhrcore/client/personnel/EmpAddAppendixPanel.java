/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmpAddAppendixPanel.java
 *
 * Created on 2009-5-6, 17:38:35
 */
package org.jhrcore.client.personnel;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import javax.swing.JScrollPane;
import org.jhrcore.client.CommUtil;
import org.jhrcore.comm.HrLog;
import org.jhrcore.client.UserContext;
import org.jhrcore.client.personnel.comm.IPickRowSelectListener;
import org.jhrcore.client.personnel.comm.PersonSelectPanel;
import org.jhrcore.util.PublicUtil;
import org.jhrcore.entity.A01;
import org.jhrcore.entity.BasePersonAppendix;
import org.jhrcore.entity.DeptCode;
import org.jhrcore.util.UtilTool;
import org.jhrcore.entity.salary.ValidateSQLResult;
import org.jhrcore.iservice.impl.RSImpl;
import org.jhrcore.mutil.EmpUtil;
import org.jhrcore.ui.BeanPanel;
import org.jhrcore.ui.task.IModuleCode;
import org.jhrcore.ui.ModelFrame;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class EmpAddAppendixPanel extends javax.swing.JPanel implements IModuleCode {

    private Class cur_class = BasePersonAppendix.class;
    private List<A01> person_list = new ArrayList();
    private BeanPanel beanPanel = new BeanPanel();
    private BasePersonAppendix cur_appendix;
    private PersonSelectPanel pnlPersonSelect;
    private HrLog log = new HrLog("EmpMng.同时录入多张附表");
    private String module_code = "EmpMng.addBatchAppendixs";
    private String cur_entity;
    private List save_appendixs = new ArrayList();

    /** Creates new form EmpAddAppendixPanel */
    public EmpAddAppendixPanel() {
        initComponents();
    }

    public EmpAddAppendixPanel(Class cs, List<A01> person_list) {
        this.person_list = person_list;
        cur_class = cs;
        cur_entity = cur_class.getSimpleName();
        initComponents();
        initOthers();
        setupEvents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jcbClose = new javax.swing.JCheckBox();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jspMain = new javax.swing.JSplitPane();
        pnlPerson = new javax.swing.JPanel();
        pnlAppendix = new javax.swing.JPanel();

        jcbClose.setText("保存完不关闭窗口");

        btnOk.setText("确定");

        btnCancel.setText("取消");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jcbClose)
                .addGap(154, 154, 154)
                .addComponent(btnOk)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbClose)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jspMain.setDividerLocation(250);
        jspMain.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        pnlPerson.setBorder(javax.swing.BorderFactory.createTitledBorder("人员基本信息"));
        pnlPerson.setLayout(new java.awt.BorderLayout());
        jspMain.setLeftComponent(pnlPerson);

        pnlAppendix.setLayout(new java.awt.BorderLayout());
        jspMain.setRightComponent(pnlAppendix);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jspMain, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jspMain, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JCheckBox jcbClose;
    private javax.swing.JSplitPane jspMain;
    private javax.swing.JPanel pnlAppendix;
    private javax.swing.JPanel pnlPerson;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        cur_appendix = (BasePersonAppendix) UtilTool.createUIDEntity(cur_class);
        cur_appendix.setLast_flag("最新");
        beanPanel.setEditable(true);
        beanPanel.setBean(cur_appendix);
        beanPanel.bind();
        pnlAppendix.add(new JScrollPane(beanPanel), BorderLayout.CENTER);
        pnlPersonSelect = new PersonSelectPanel(cur_class, true);
        pnlPersonSelect.addObject(person_list);
        pnlPerson.add(pnlPersonSelect, BorderLayout.CENTER);
    }

    private void setupEvents() {
        pnlPersonSelect.addPickPersonSelectListener(new IPickRowSelectListener() {

            @Override
            public List pickPerson(String hql) {
                return CommUtil.fetchEntities(hql);
            }

            @Override
            public void pickRow(Object a01) {
                beanPanel.setBean(a01);
                beanPanel.bind();
                beanPanel.updateUI();
            }

            @Override
            public void pickFields(List<String> fields) {
                List<String> exist_fields = beanPanel.getFields();
                exist_fields.removeAll(fields);
                beanPanel.setFields(exist_fields);
                beanPanel.bind();
            }

            @Override
            public void addRows(List list) {
            }
        });
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                log.info(e);
                addAppendix();
                if (!jcbClose.isSelected()) {
                    ModelFrame.close();
                }

            }
        });
        btnCancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                log.info(e);
                ModelFrame.close();
            }
        });
    }

    /**
     * 批量新增附表处理
     */
    private void addAppendix() {
        ValidateSQLResult vs = RSImpl.addAppendixs(save_appendixs);
        if (vs.getResult() == 0) {
            log.info("附表录入成功");
            pnlPersonSelect.delObjects();
        } else {
            log.info("附表录入失败");
        }
    }

    @Override
    public String getModuleCode() {
        return module_code;
    }

}
