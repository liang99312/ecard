/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegisterDesignDeptPanel.java
 *
 * Created on 2011-4-9, 10:48:40
 */
package org.jhrcore.client.personnel.register;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import org.jhrcore.client.CommUtil;
import org.jhrcore.client.UserContext;
import org.jhrcore.ui.WizardPanel;
import org.jhrcore.entity.DeptCode;
import org.jhrcore.msg.emp.EmpRegisterMsg;
import org.jhrcore.ui.CheckTreeNode;
import org.jhrcore.ui.DeptSelectPanel;
import org.jhrcore.ui.task.IModuleCode;
import org.jhrcore.ui.TreeSelectMod;
import org.jhrcore.util.ComponentUtil;

/**
 *
 * @author hflj
 */
public class RegisterDesignDeptPanel extends WizardPanel implements IModuleCode{

    private DeptSelectPanel pnlDept;
    private RegisterDesignPara para;
    private String module_code = "EmpRegister.menuRegister.dept";

    /** Creates new form RegisterDesignDeptPanel */
    public RegisterDesignDeptPanel(RegisterDesignPara registerDesignPara) {
        this.para = registerDesignPara;
        initComponents();
        initOthers();
        setupEvents();
    }

    public RegisterDesignDeptPanel() {
        initComponents();
        initOthers();
        setupEvents();
    }

    private void initOthers() {
        if (para.getRegister_depts() == null) {
            List list = CommUtil.selectSQL("select sysparameter_value from SysParameter where sysparameter_code='Register.Dept'");
            para.setRegister_depts(list);
        }
        pnlMain.removeAll();
        List<DeptCode> depts = UserContext.getDepts(false, false);
        List exists_dept = new ArrayList();
        for (DeptCode dc : depts) {
            if (para.getRegister_depts().contains(dc.getDept_code())) {
                exists_dept.add(dc);
            }
        }
        pnlDept = new DeptSelectPanel(depts, exists_dept, TreeSelectMod.nodeCheckMod);
        pnlMain.add(pnlDept);
        pnlMain.updateUI();
    }

    private void setupEvents() {
        jCheckBox1.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                refreshDeptUI();
            }
        });
        ComponentUtil.setSysFuntionNew(this, false);
    }

    private void refreshDeptUI() {
        List selectDepts = pnlDept.getSelectDepts();
        if (jCheckBox1.isSelected()) {
            List<CheckTreeNode> list = pnlDept.getSelectNodes();
            for (CheckTreeNode node : list) {
                node.removeAllChildren();
            }
            pnlDept.getDept_tree().updateUI();
        } else {
            pnlMain.removeAll();
            pnlDept = new DeptSelectPanel(UserContext.getDepts(false, false), selectDepts, TreeSelectMod.nodeCheckMod);
            pnlMain.add(pnlDept);
            pnlMain.updateUI();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();

        pnlMain.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("说明：");

        jLabel2.setText("1.当设置启用后，入职将会");

        jLabel3.setText("  被限制在入职部门范围内。");

        jLabel4.setText("2.遵循上级包含下级的原则，");

        jLabel5.setText("  即A部门允许，则A的所有下");

        jLabel6.setText("  级部门均被允许。");

        jLabel7.setText("3.当未勾选任何部门，认为不");

        jLabel8.setText("  启用该限制。");

        jCheckBox1.setText("仅显示选择部门");

        jLabel9.setText("4.此限制不适用于导入。");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jCheckBox1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jCheckBox1)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public boolean isValidate() {
        return true;
    }

    @Override
    public void beforeLeave() {
        List<DeptCode> depts = pnlDept.getSelectParentDepts();
        para.setRegister_depts(depts);
    }

    @Override
    public String getTitle() {
        return EmpRegisterMsg.msg028.toString();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getModuleCode() {
        return module_code;
    }
}
