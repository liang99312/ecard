/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MyToolTipPanel.java
 *
 * Created on 2013-9-30, 14:45:04
 */
package org.jhrcore.client.desk;

import com.foundercy.pf.control.table.FTable;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jhrcore.client.index.IndexUtil;
import org.jhrcore.ui.task.IModulePanel;
import org.jhrcore.ui.task.IWaitWork;

/**
 *
 * @author mxliteboss
 */
public class MyToolTipPanel extends JPanel implements IModulePanel, IWaitWork {

    private FTable ftable_left;
    public static String module_code = "MyToolTip";
    private ListSelectionListener row_listener;
    private Object curObj = null;

    /** Creates new form MyToolTipPanel */
    public MyToolTipPanel() {
        initComponents();
        initOthers();
        setUpEvent();
    }

    private void initOthers() {
        List<String> fields = new ArrayList<String>();
        fields.add("提醒方案");
        fields.add("人数");
        ftable_left = new FTable(fields);
        ftable_left.setObjects(IndexUtil.getToolTipData(false));
        jPanel2_left.add(ftable_left);
    }
    // End of variables declaration

    private void setUpEvent() {
        row_listener = new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (curObj == ftable_left.getCurrentRow()) {
                    return;
                }
                curObj = ftable_left.getCurrentRow();
                pnlMain.removeAll();
                pnlMain.add(getToolTipPanel(curObj));
                pnlMain.updateUI();
            }
        };
        List list = IndexUtil.getToolTipData(false);
        initForWait(list,null);
    }

    public static JPanel getToolTipPanel(Object obj) {
        if (obj == null) {
            return null;
        }
        Object[] objects = (Object[]) obj;
        return MySingleToolTipPanel.getInstance((String) objects[2], (String) objects[3]);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2_left = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();

        jSplitPane1.setDividerLocation(222);
        jSplitPane1.setOneTouchExpandable(true);

        jPanel2_left.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setLeftComponent(jPanel2_left);

        pnlMain.setPreferredSize(new java.awt.Dimension(600, 400));
        pnlMain.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setRightComponent(pnlMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2_left;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setFunctionRight() {
    }

    @Override
    public void pickClose() {
    }

    @Override
    public String getModuleCode() {
        return module_code;
    }

    @Override
    public void initForWait(List data, Object row) {
        curObj = null;
        ftable_left.removeListSelectionListener(row_listener);
        ftable_left.setObjects(data);
        ftable_left.addListSelectionListener(row_listener);
        row_listener.valueChanged(null);
    }

    @Override
    public void refresh() {
    }
}
