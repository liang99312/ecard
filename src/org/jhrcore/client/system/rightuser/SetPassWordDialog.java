/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditPassDialog.java
 *
 * Created on 2009-6-13, 17:54:15
 */
package org.jhrcore.client.system.rightuser;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import org.jhrcore.client.CommUtil;
import org.jhrcore.entity.A01;
import org.jhrcore.entity.salary.ValidateSQLResult;
import org.jhrcore.ui.action.CloseAction;
import org.jhrcore.util.CipherUtil;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class SetPassWordDialog extends javax.swing.JDialog {

    private Logger log = Logger.getLogger("系统维护.重新设置用户密码");
    private A01 a01;

    /**
     * Creates new form EditPassDialog
     */
    public SetPassWordDialog(A01 a01) {
        this.a01 = a01;
        this.setTitle("重新设置用户密码");
        initComponents();
        initOthers();
        setupEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jLabel1.setText("用户名：");

        jLabel2.setText("新密码：");

        jLabel3.setText("确认密码：");

        btnOk.setText("确定");

        btnCancel.setText("取消");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap(111, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(214, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        jTextField1.setText(a01.getA0190());
        jTextField1.setEditable(false);
    }

    private void setupEvents() {
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                String user_name = jTextField1.getText().replace(" ", "");
                String new_pass = new String(jPasswordField2.getPassword());
                String new_repeat_pass = new String(jPasswordField3.getPassword());
                if (user_name == null || "".equals(user_name)) {
                    JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent(btnOk), "请输入用户名", "提示", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                if (!new_pass.equals(new_repeat_pass)) {
                    JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent(btnOk), "两次密码不一致", "错误", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (CommUtil.exists("from SysParameter s where s.sysParameter_key='cryptA01PassWord'")) {
                    new_pass = CipherUtil.encodeByMD5(new_pass);
                }
                ValidateSQLResult result = CommUtil.excuteSQL("update a01password set pswd='" + new_pass + "' where a01_key in (select a01_key from a01 where a0190='" + user_name + "')");
                if (result.getResult() == 0) {
                    log.info("$用户名：" + user_name + ",密码修改为:" + new_repeat_pass);
                    JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent(btnOk), "设置密码成功", "提示", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    MsgUtil.showHRSaveErrorMsg(result);
                }
                dispose();
            }
        });
        CloseAction.doCloseAction(btnCancel);
    }
}
