/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FieldFormatCompPanel.java
 *
 * Created on 2009-9-9, 13:28:11
 */
package org.jhrcore.client.system.comm;

import com.foundercy.pf.control.table.FTable;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.List;
import javax.swing.JOptionPane;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.SwingBindings;
import org.jhrcore.client.CommUtil;
import org.jhrcore.entity.base.FieldFormat;
import org.jhrcore.entity.base.ModuleInfo;
import org.jhrcore.entity.base.EntityDef;
import org.jhrcore.entity.base.FieldDef;
import org.jhrcore.entity.salary.ValidateSQLResult;
import org.jhrcore.iservice.impl.SysImpl;
import org.jhrcore.ui.action.CloseAction;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class FieldFormatCompPanel extends javax.swing.JPanel {

    private JListBinding format_binding;
    private JComboBoxBinding module_binding;
    private JComboBoxBinding entity_binding;
    private List<FieldFormat> formats = new ArrayList<FieldFormat>();
    private List<ModuleInfo> modules = new ArrayList<ModuleInfo>();
    private List<EntityDef> entitys = new ArrayList<EntityDef>();
    private String field_type;
    private Hashtable<String, List<EntityDef>> module_entity_keys = new Hashtable<String, List<EntityDef>>();
    private FTable ftable;
    private boolean change_format = false;
    private HashSet<FieldDef> update_fields = new HashSet<FieldDef>();

    /** Creates new form FieldFormatCompPanel */
    public FieldFormatCompPanel() {
        initComponents();
        initOthers();
        setupEvents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlsFormat = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        jcbFormat = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbEntity = new javax.swing.JComboBox();
        pnlField = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcbModule = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("格式化参数列表"));

        jScrollPane1.setViewportView(jlsFormat);

        jLabel9.setText("字段类型：");

        jcbFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Float", "Date" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("字段列表"));

        jLabel1.setText("表名：");

        jcbEntity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pnlField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlField.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("模块：");

        jcbModule.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbModule, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbEntity, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addComponent(pnlField, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbModule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlField, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
        );

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/select_one.png"))); // NOI18N

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/remove_one.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnOk.setText("保存");

        btnCancel.setText("关闭");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(445, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox jcbEntity;
    private javax.swing.JComboBox jcbFormat;
    private javax.swing.JComboBox jcbModule;
    private javax.swing.JList jlsFormat;
    private javax.swing.JPanel pnlField;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        format_binding = SwingBindings.createJListBinding(UpdateStrategy.READ_WRITE, formats, jlsFormat);
        format_binding.bind();
        List list = CommUtil.fetchEntities("from EntityDef ed join fetch ed.entityClass ec join fetch ec.moduleInfo mi order by mi.order_no,ec.order_no,ed.order_no");
        HashSet<String> module_keys = new HashSet<String>();
        for (Object obj : list) {
            EntityDef ed = (EntityDef) obj;
            ModuleInfo mi = ed.getEntityClass().getModuleInfo();
            if (!module_keys.contains(mi.getModule_key())) {
                module_keys.add(mi.getModule_key());
                modules.add(mi);
            }
            List<EntityDef> entity_list = module_entity_keys.get(mi.getModule_key());
            if (entity_list == null) {
                entity_list = new ArrayList<EntityDef>();
            }
            entity_list.add(ed);
            module_entity_keys.put(mi.getModule_key(), entity_list);
        }
        module_binding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, modules, jcbModule);
        module_binding.bind();
        entity_binding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, entitys, jcbEntity);
        entity_binding.bind();
        ftable = new FTable(FieldDef.class, false, false);
        List<String> fields = new ArrayList<String>();
        fields.add("field_name");
        fields.add("field_caption");
        fields.add("field_type");
        fields.add("format");
        ftable.setFields(fields);
        pnlField.add(ftable, BorderLayout.CENTER);
    }

    private void setupEvents() {
        jcbModule.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object obj = jcbModule.getSelectedItem();
                if (obj == null) {
                    return;
                }
                ModuleInfo mi = (ModuleInfo) obj;
                List<EntityDef> entity_list = module_entity_keys.get(mi.getModule_key());
                entitys.clear();
                if (entity_list != null) {
                    entitys.addAll(entity_list);
                }
                entity_binding.unbind();
                entity_binding.bind();
                if (entitys.size() > 0) {
                    jcbEntity.setSelectedIndex(0);
                }
            }
        });
        jcbEntity.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                refreshField();
            }
        });
        jcbFormat.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                refreshFormatList(jcbFormat.getSelectedItem().toString());
                refreshField();
            }
        });
        btnAdd.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object obj = jlsFormat.getSelectedValue();
                if (obj == null) {
                    return;
                }
                String format = ((FieldFormat) obj).getFormat();
                List<FieldDef> list = ftable.getSelectObjects();
                for (FieldDef fd : list) {
                    change_format = true;
                    fd.setFormat(format);
                    update_fields.add(fd);
                }
                ftable.updateUI();
            }
        });
        btnDel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                List<FieldDef> list = ftable.getSelectObjects();
                for (FieldDef fd : list) {
                    change_format = true;
                    fd.setFormat("");
                    update_fields.add(fd);
                }
                ftable.updateUI();
            }
        });
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (change_format) {
                    change_format = false;
                    saveFormat();

                }
                update_fields.clear();
            }
        });
        CloseAction.doCloseAction(btnCancel);
        if (modules.size() > 0) {
            jcbModule.setSelectedIndex(0);
        }
        jcbFormat.setSelectedIndex(0);
    }

    private void saveFormat() {
        if (update_fields.isEmpty()) {
            return;
        }
        List<FieldDef> fds = new ArrayList<FieldDef>();
        fds.addAll(update_fields);
        ValidateSQLResult vs = SysImpl.saveFieldFormat(fds);
        if (vs.getResult() == 0) {
            JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent(jcbEntity), "保存成功");
        } else {
            MsgUtil.showHRSaveErrorMsg(vs);
        }
    }

    private void refreshField() {
        if (change_format) {
            change_format = false;
            if (JOptionPane.showConfirmDialog(JOptionPane.getFrameForComponent(jcbFormat),
                    "字段格式化参数变化，是否保存", "是否保存", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) != JOptionPane.OK_OPTION) {
                return;
            }
            saveFormat();
        }
        update_fields.clear();
        Object obj = jcbEntity.getSelectedItem();
        if (obj == null || field_type == null) {
            ftable.deleteAllRows();
        } else {
            EntityDef ed = (EntityDef) obj;
            ftable.setObjects(CommUtil.fetchEntities("from FieldDef fd join fetch fd.entityDef ed where ed.entity_key='" + ed.getEntity_key() + "' and fd.field_type='" + field_type + "' order by fd.order_no"));
        }
    }

    private void refreshFormatList(String field_type) {
        this.field_type = field_type;
        formats.clear();
        String hql = " from FieldFormat ff where ff.field_type='" + field_type + "'";
        List list = CommUtil.fetchEntities(hql);
        for (Object obj : list) {
            formats.add((FieldFormat) obj);
        }
        format_binding.unbind();
        format_binding.bind();
        if (formats.size() > 0) {
            jlsFormat.setSelectedIndex(0);
        }
    }
}
