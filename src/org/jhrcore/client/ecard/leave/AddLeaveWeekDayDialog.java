/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddLeaveWeekDayDialog.java
 *
 * Created on 2009-11-30, 15:23:03
 */
package org.jhrcore.client.ecard.leave;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import javax.swing.JScrollPane;
import org.jhrcore.client.CommUtil;
import org.jhrcore.util.DateUtil;
import org.jhrcore.util.PublicUtil;
import org.jhrcore.util.UtilTool;
import org.jhrcore.entity.base.TempFieldInfo;
import org.jhrcore.entity.ecard.Ecard_leave;
import org.jhrcore.entity.salary.ValidateSQLResult;
import org.jhrcore.rebuild.EntityBuilder;
import org.jhrcore.ui.BeanPanel;
import org.jhrcore.ui.task.IModuleCode;
import org.jhrcore.ui.JhrDatePicker;
import org.jhrcore.ui.action.CloseAction;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class AddLeaveWeekDayDialog extends javax.swing.JDialog implements IModuleCode {

    private JhrDatePicker jdpStart = new JhrDatePicker();
    private JhrDatePicker jdpEnd = new JhrDatePicker();
    private boolean click_ok = false;
    private ValidateSQLResult result;
    private List<String> selectIndex = new ArrayList<String>();
    private Ecard_leave ecard_leave_new;
    private BeanPanel beanPanel;
    public static final String module_code = "Ecard_leave.miAddWeekDay";
    private List fields = new ArrayList();

    public boolean isClick_ok() {
        return click_ok;
    }

    public ValidateSQLResult getResult() {
        return result;
    }

    /** Creates new form AddLeaveWeekDayDialog */
    public AddLeaveWeekDayDialog(java.awt.Frame parent) {
        super(parent);
        this.setTitle("按星期增加");
        initComponents();
        initOthers();
        setupEvents();
    }

    public AddLeaveWeekDayDialog() {
        this.setTitle("按星期增加");
        initComponents();
        initOthers();
        setupEvents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cb_thursday = new javax.swing.JCheckBox();
        cb_wednesday = new javax.swing.JCheckBox();
        cb_tuesday = new javax.swing.JCheckBox();
        cb_monday = new javax.swing.JCheckBox();
        cb_friday = new javax.swing.JCheckBox();
        cb_staturday = new javax.swing.JCheckBox();
        cb_sunday = new javax.swing.JCheckBox();
        pnlMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        btnOk.setText("确定");

        btnCancel.setText("取消");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(265, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addGap(73, 73, 73)
                .addComponent(btnCancel)
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("开始日期");

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel7.setText("（含此日）");

        jLabel6.setText("结束日期");

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel8.setText("（含此日）");

        cb_thursday.setText("星期四");

        cb_wednesday.setText("星期三");

        cb_tuesday.setText("星期二");

        cb_monday.setText("星期一");

        cb_friday.setText("星期五");

        cb_staturday.setText("星期六");

        cb_sunday.setText("星期日");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cb_monday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_tuesday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_wednesday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_thursday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_friday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_staturday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_sunday))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_monday)
                    .addComponent(cb_tuesday)
                    .addComponent(cb_wednesday)
                    .addComponent(cb_thursday)
                    .addComponent(cb_friday)
                    .addComponent(cb_staturday)
                    .addComponent(cb_sunday))
                .addGap(38, 38, 38))
        );

        pnlMain.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox cb_friday;
    private javax.swing.JCheckBox cb_monday;
    private javax.swing.JCheckBox cb_staturday;
    private javax.swing.JCheckBox cb_sunday;
    private javax.swing.JCheckBox cb_thursday;
    private javax.swing.JCheckBox cb_tuesday;
    private javax.swing.JCheckBox cb_wednesday;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        jPanel2.add(jdpStart, BorderLayout.CENTER);
        jPanel3.add(jdpEnd, BorderLayout.CENTER);
        
        ecard_leave_new = (Ecard_leave) UtilTool.createUIDEntity(Ecard_leave.class);
        beanPanel = new BeanPanel();
        beanPanel.setColumns(1);
        pnlMain.add(new JScrollPane(beanPanel), BorderLayout.CENTER);
        List<TempFieldInfo> leave_infos = EntityBuilder.getCommFieldInfoListOf(Ecard_leave.class, EntityBuilder.COMM_FIELD_VISIBLE);
        for (TempFieldInfo tfi : leave_infos) {
            if (tfi.getField_name().equalsIgnoreCase("Ecard_leave_date")) {
                continue;
            }
            fields.add(tfi.getField_name());
        }
        beanPanel.setBean(ecard_leave_new);
        beanPanel.setFields(fields);
        beanPanel.setEditable(true);
        beanPanel.bind();
    }

    private void setupEvents() {
        cb_monday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_monday.isSelected()) {
                    selectIndex.add("2");
                } else {
                    selectIndex.remove("2");
                }
            }
        });
        cb_tuesday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_tuesday.isSelected()) {
                    selectIndex.add("3");
                } else {
                    selectIndex.remove("3");
                }
            }
        });
        cb_wednesday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_wednesday.isSelected()) {
                    selectIndex.add("4");
                } else {
                    selectIndex.remove("4");
                }
            }
        });
        cb_thursday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_thursday.isSelected()) {
                    selectIndex.add("5");
                } else {
                    selectIndex.remove("5");
                }
            }
        });
        cb_friday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_friday.isSelected()) {
                    selectIndex.add("6");
                } else {
                    selectIndex.remove("6");
                }
            }
        });
        cb_staturday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_staturday.isSelected()) {
                    selectIndex.add("7");
                } else {
                    selectIndex.remove("7");
                }
            }
        });
        cb_sunday.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (cb_sunday.isSelected()) {
                    selectIndex.add("1");
                } else {
                    selectIndex.remove("1");
                }
            }
        });
        CloseAction.doCloseAction(btnCancel);
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                String k_name = ecard_leave_new.getEcard_leave_name();
                if (k_name == null || k_name.trim().equals("")) {
                    MsgUtil.showInfoMsg("请输入休息日名称");
                    return;
                }
                Date startDate = jdpStart.getDate();
                Date endDate = jdpEnd.getDate();
                if (startDate.after(endDate)) {
                    MsgUtil.showInfoMsg("结束日期不能早于开始日期");
                    return;
                }
                if (selectIndex.size() < 1) {
                    MsgUtil.showInfoMsg("请选择星期几");
                    return;
                }

                StringBuffer buffer = new StringBuffer();
                Calendar c_se = Calendar.getInstance();
                c_se.setTime(jdpStart.getDate());
                if (!selectIndex.contains(c_se.get(Calendar.DAY_OF_WEEK) + "")) {
                    buffer.append("开始日期不包含在日期中,是否继续？");
                }
                c_se.setTime(jdpEnd.getDate());
                if (!selectIndex.contains(c_se.get(Calendar.DAY_OF_WEEK) + "")) {
                    buffer.append("结束日期不包含在日期中,是否继续？");
                }
                if (!buffer.toString().equals("")) {
                    if (MsgUtil.showNotConfirmDialog(buffer)) {
                        return;
                    }
                }
                String hql = "from Ecard_leave k where 1=1";
                String startTime = DateUtil.toStringForQuery(startDate);
                String endTime = DateUtil.toStringForQuery(endDate);
                hql = hql + " and k.ecard_leave_date>= " + startTime + " and k.ecard_leave_date<= " + endTime;
                List exist_list = CommUtil.fetchEntities(hql);
                Hashtable<String, Ecard_leave> exist_keys = new Hashtable<String, Ecard_leave>();
                for (Object obj : exist_list) {
                    Ecard_leave ecard_leave = (Ecard_leave) obj;
                    exist_keys.put(DateUtil.DateToStr(ecard_leave.getEcard_leave_date()), ecard_leave);
                }
                List<String> all_dates = new ArrayList<String>();
                Calendar c = Calendar.getInstance();
                c.setTime(startDate);
                if (selectIndex.contains(c.get(Calendar.DAY_OF_WEEK) + "")) {
                    all_dates.add(DateUtil.DateToStr(startDate));
                }
                while (c.getTime().before(endDate)) {
                    String day = DateUtil.DateToStr(c.getTime());
                    if (!all_dates.contains(day) && selectIndex.contains(c.get(Calendar.DAY_OF_WEEK) + "")) {
                        all_dates.add(day);
                    }
                    c.add(Calendar.DAY_OF_MONTH, 1);
                }
                String day = DateUtil.DateToStr(c.getTime());
                if (!all_dates.contains(day) && selectIndex.contains(c.get(Calendar.DAY_OF_WEEK) + "")) {
                    all_dates.add(day);
                }
                List saveList = new ArrayList();
                for (String tmp : all_dates) {
                    Ecard_leave ecard_leave = exist_keys.get(tmp);
                    if (ecard_leave == null) {
                        ecard_leave = (Ecard_leave) UtilTool.createUIDEntity(Ecard_leave.class);
                    } else {
                        continue;
                    }
                    PublicUtil.copyProperties(ecard_leave_new, ecard_leave, fields, fields);
                    saveList.add(ecard_leave);
                    ecard_leave.setEcard_leave_name(k_name);
                    ecard_leave.setEcard_leave_date(DateUtil.StrToDate(tmp));
                }
                result = CommUtil.saveList(saveList);
                click_ok = true;
                dispose();
            }
        });
    }

    @Override
    public String getModuleCode() {
        return module_code;
    }
}
